---
datasets:
  - src: data/datasets
    dest: '' # If empty, path is public/ in THREDDS
    
collections:
  - &collection1
    path: collection1 # Id of the collection and logical path in THREDDS
    top: True # default True # Add a reference in the tds gateway to the collection
    mode: '2775'
    catalogs:
      src: data/collection1
      _owner: zequi
    services: [catalog, fileServer, dodsC]

  - &collection2
    path: collection2
    top: True
    catalogs:
      src: data/collection2
    services: [dap4, dodsC, catalog, fileServer, ncss/grid]

tds:
  - &instance1
    name: instance1
    shutdown: 18000
    tds_content_root: "{{ tomcat_base }}/instance1/content" # /thredds is hardcoded
    tds_debug:
      jpda_address: "{{ ansible_ens10.ipv4.address }}:8000"
    connectors:
      - protocol: HTTP/1.1
        port: 8080
      - protocol: AJP/1.3
        port: 18009
    manager:
      className: "de.javakaffee.web.msm.MemcachedBackupSessionManager"
      memcachedNodes: "n1:{{ hostvars[groups['tds'][0]].ansible_ens10.ipv4.address }}:11211,n2:{{hostvars[groups['tds'][1]].ansible_ens10.ipv4.address }}:11211"
      sticky: "false"
      lockingMode: "auto"

replicas:
  - &replica1
    gateway: "{{ groups['gateways'][0] }}" # ansible host id
    host: "{{ ansible_ens10.ipv4.address }}" # tds_instance IP or hostname
    tds_instance: *instance1
    collection: *collection1
    route: "{{ ansible_nodename ~ '_' ~ 18009 }}"
    port: 8080

  - <<: *replica1
    collection: *collection2
