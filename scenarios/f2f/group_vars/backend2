# -*-yaml-*-
# Download TDS in the gateway fails because of selinux and local_action
ansible_python_interpreter: /usr/bin/python

miniconda_prefix: "{{ ansible_env.HOME }}/miniconda"
miniconda_python: 2
miniconda_env:
  name: f2f
  channels:
    - birdhouse
  dependencies:
    - libnetcdf=4.4.1
    - supervisor
    - apache-tomcat

tomcat_base: "{{ miniconda_prefix }}/envs/{{ miniconda_env.name }}/opt/instances"
tds_version: ESGF-5.0.1

collections:
  - &collection1
    name: collection1
    path: esgcet/1
    catalogs:
      src: /esg/content/thredds/esgcet/1
    services: [dodsC, fileServer, catalog]

  - &collection2
    name: collection2
    path: esgcet/2
    catalogs:
      src: /esg/content/thredds/esgcet/2
    services: [dodsC, fileServer, catalog]

  - &collectionRoot
    name: collectionRoot
    path: esgcet
    catalogs:
      src: /esg/content/thredds/esgcet
    services: [dodsC, fileServer, catalog]

tds:
  - &backend_instance
    name: instance1
    shutdown: 20005
    tds_debug:
      jpda_address: "{{ ansible_eth1.ipv4.address }}:7999"
    connectors:
      - &c1
        port: 8443
        SSLEnabled: "true"
        maxHttpHeaderSize: 8192
        maxThreads: 150
        minSpareThreads: 25
        maxSpareThreads: 75
        enableLookups: "false"
        disableUploadTimeout: "true"
        acceptCount: 100
        sheme: https
        secure: "true"
        clientAuth: want
        sslEnabledProtocol: TLSv1,TLSv1.1,TLSv1.2
        proxyPort: 443
        proxyName: "{{ hostvars['esgf'].ansible_eth1.ipv4.address }}"
        server: X
        ciphers: TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,SSL_RSA_WITH_3DES_EDE_CBC_SHA
        truststoreFile: "{{ tomcat_base }}/instance1/conf/esg-truststore.ts"
        truststorePass: changeit
        keyAlias: my_esgf_node
        keystoreFile: "{{ tomcat_base }}/instance1/conf/keystore-tomcat"
        keystorePass: coches1
      # AJP Connector, as defined in ESGF node tomcat
      - port: 8223
        protocol: AJP/1.3
        redirectPort: 8443
  - <<: *backend_instance
    &backend_instance2
    name: instance2
    shutdown: 20006
    connectors:
      <<: *c1
      port: 8444

replicas:
  - gateway: esgf
    host: "{{ ansible_eth1.ipv4.address }}"
    port: 8223
    route: "{{ ansible_nodename }}"
    tds_instance: *backend_instance
    collection: *collection1

  - gateway: esgf
    host: "{{ ansible_eth1.ipv4.address }}"
    port: 8444
    route: "{{ ansible_nodename }}"
    tds_instance: *backend_instance2
    collection: *collection2
