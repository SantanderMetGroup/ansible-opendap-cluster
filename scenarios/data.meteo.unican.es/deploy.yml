- name: Deploy load balancers
  hosts: lbs
  roles:
    - role: load-balancer
      lb_type: modproxy
      clusters: # modproxy requires order, most specific first
        - name: system4interim
          urls:
            - /tds5/dodsC/system4
            - /tds5/ncss/grid/system4
            - /tds5/dodsC/interim
            - /tds5/ncss/grid/interim
        - name: default
          urls: [/tds5,/tds5/catalog]
        - name: tap
          urls: [/udg-tap]
  tasks:
    - name: Copy httpd.conf
      copy: src=httpd/httpd.conf dest=/etc/httpd/conf/httpd.conf

    - name: Copy httpd.ssl.conf
      copy: src=httpd/httpd.ssl.conf dest=/etc/httpd/conf/httpd.ssl.conf

    - name: Add esgcet lb worker
      blockinfile:
        path: "{{ modproxy_conf }}"
        marker: "# {mark} esgcet"
        insertbefore: '<Proxy "balancer://default">'
        block: |
          <Proxy "balancer://esgcet">
          ProxySet stickysession=JSESSIONID
          BalancerMember "ajp://localhost:8223" loadfactor=1 route=esgcet
          </Proxy>
          ProxyPass "/thredds/catalog/esgcet" "balancer://esgcet/thredds/catalog/esgcet"
          ProxyPassReverse "/thredds/catalog/esgcet" "balancer://esgcet/thredds/catalog/esgcet"
          ProxyPass "/thredds/fileServer/esgcet" "balancer://esgcet/thredds/fileServer/esgcet"
          ProxyPassReverse "/thredds/fileServer/esgcet" "balancer://esgcet/thredds/fileServer/esgcet"
          ProxyPass "/thredds/dodsC/esgcet" "balancer://esgcet/thredds/dodsC/esgcet"
          ProxyPassReverse "/thredds/dodsC/esgcet" "balancer://esgcet/thredds/dodsC/esgcet"
          ProxyPass "/esg-orp" "balancer://esgcet/esg-orp"
          ProxyPassReverse "/esg-orp" "balancer://esgcet/esg-orp"

    - name: Copy ESGF catalogs
      synchronize: src=esgcet/ dest=/esg/content/thredds/esgcet
      when: "'data' != inventory_file" # not copy in data

- name: Deploy user database server
  hosts: databases
  roles:
    - role: jdk-source
      jdk_root: "{{ ansible_env.HOME }}/services/jdk"
    - role: derby

- name: Deploy workers
  hosts: servers
  vars:
    tomcat_keystore: "../../server.p12"
    tomcat_ssl_keystoreFile: "{{ tomcat_home }}/server.p12"
    tomcat_ssl_keystorePass: coches1
    #tds_useSSL: true
    #tds_sslPort: 8443
    tds_download: False
    tds_content_root_path: "{{ tomcat_home }}/content"
    tds_content: "{{ tomcat_home }}/content/thredds"
    tds_context: tds5
  vars_files:
    - secrets/secret.yml
    - secrets/svn.yml
  roles:
    - role: jdk-source
    - role: tomcat-source
    - role: tomcat
      tomcat_name: i1
      tomcat_webapps: [tds, tap]
      tomcat_http_port: 8080
      tomcat_ajp_port: 8008
      tomcat_shutdown_port: 8005
      tomcat_workers:
        - gateway: "{{ groups['lbs'][0] }}"
          balancer: tap
          properties: loadfactor=1 route={{ tomcat_route }}
        - gateway: "{{ groups['lbs'][0] }}"
          balancer: default
          properties: loadfactor=1 route={{ tomcat_route }}
      tap_war: udg-tap.war
      tap_email_noreply: no-reply@meteo.unican.es
    - role: tomcat
      tomcat_name: i2
      tomcat_webapps: [tds]
      tomcat_http_port: 8081
      tomcat_ajp_port: 8018
      tomcat_shutdown_port: 8006
      tomcat_workers:
        - gateway: "{{ groups['lbs'][0] }}"
          balancer: system4interim
          properties: loadfactor=1 route={{ tomcat_route }}
        - gateway: "{{ groups['lbs'][0] }}"
          balancer: default
          properties: loadfactor=1 route={{ tomcat_route }}
  pre_tasks:
    - name: Checkout TDS5 catalogs
      import_tasks: catalogs.yml
      tags: catalogs
  tasks:
    - name: Add database resource to tomcat
      lineinfile:
        path: "{{ tomcat_base }}/{{ item }}/conf/context.xml"
        insertbefore: </Context>
        line: '<ResourceLink global="jdbc/adminDB" name="jdbc/adminDB" type="javax.sql.DataSource"/>'
      with_items: [i1, i2]
