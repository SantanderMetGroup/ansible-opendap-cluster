- name: Deploy load balancers
  hosts: lbs
  roles:
    - role: load-balancer
      lb_type: modproxy
      clusters: # modproxy requires order, most specific first
        - name: system4interim
          urls:
            - /tds5/dodsC/system4
            - /tds5/ncss/grid/system4
            - /tds5/dodsC/interim
            - /tds5/ncss/grid/interim
        - name: default
          urls: [/tds5,/tds5/catalog]
        - name: tap
          urls: [/udg-tap]
  tasks:
    - name: Copy httpd.conf
      copy: src=httpd/httpd.conf dest=/etc/httpd/conf/httpd.conf

    - name: Copy httpd.ssl.conf
      copy: src=httpd/httpd.ssl.conf dest=/etc/httpd/conf/httpd.ssl.conf

    - name: Add esgcet lb worker
      blockinfile:
        path: "{{ modproxy_conf }}"
        marker: "# {mark} esgcet"
        insertbefore: '<Proxy "balancer://default">'
        block: |
          <Proxy "balancer://esgcet">
          ProxySet stickysession=JSESSIONID
          BalancerMember "ajp://localhost:8223" loadfactor=1 route=esgcet
          </Proxy>
          ProxyPass "/thredds/catalog/esgcet" "balancer://esgcet/thredds/catalog/esgcet"
          ProxyPassReverse "/thredds/catalog/esgcet" "balancer://esgcet/thredds/catalog/esgcet"
          ProxyPass "/thredds/fileServer/esgcet" "balancer://esgcet/thredds/fileServer/esgcet"
          ProxyPassReverse "/thredds/fileServer/esgcet" "balancer://esgcet/thredds/fileServer/esgcet"
          ProxyPass "/thredds/dodsC/esgcet" "balancer://esgcet/thredds/dodsC/esgcet"
          ProxyPassReverse "/thredds/dodsC/esgcet" "balancer://esgcet/thredds/dodsC/esgcet"
          ProxyPass "/esg-orp" "balancer://esgcet/esg-orp"
          ProxyPassReverse "/esg-orp" "balancer://esgcet/esg-orp"

    - name: Copy ESGF catalogs
      synchronize: src=esgcet/ dest=/esg/content/thredds/esgcet
      when: "'data' != inventory_file" # not copy in data

- name: Deploy user database server
  hosts: databases
  roles:
    - role: jdk-source
      jdk_root: "{{ ansible_env.HOME }}/services/jdk"
    - role: derby
      derby_drda_host: "{{ ansible_eth0.ipv4.address }}"

- name: Deploy catalogs
  hosts: "{{ groups['servers'][0] }}"
  tags: catalogs
  vars_files:
    - secrets/secret.yml
    - secrets/svn.yml
  tasks:
    - name: Create common content/thredds directory
      file: state=directory path={{ tomcat_home }}/content

    - name: Checkout TDS5 data
      subversion:
        repo: https://meteo.unican.es/svn/repos/sistemas/services/TDS5/tomcat/content/thredds/
        dest: "{{ tds_content }}"
        username: "{{ svn_username }}"
        password: "{{ svn_password }}"
        force: yes

    - name: Fix TDS5 catalogs and datasets (remove tabs)
      shell: find catalogs public -type f -print0 | xargs -0 -n1 | grep -v svn | xargs -n1 perl -pi -e 's/(".*?)\t+"/\1"/g'
      args:
        chdir: "{{ tds_content }}"

    - name: Reference ESGF catalog from TDS5 root catalog
      lineinfile:
        path: "{{ tds_content }}/catalog.xml"
        insertbefore: </catalog>
        line: '<catalogRef xlink:title="Unican ESGF Data Node" xlink:href="esgcet/catalog.xml" name="" />'

    ## Temporary cmip6 catalog
    - name: Copy cmip6 catalog
      copy: src=cmip6.xml dest={{ tds_content }}/catalogs/cmip6.xml

    - name: Reference cmip6 catalog
      lineinfile:
        path: "{{ tds_content }}/catalog.xml"
        insertbefore: </catalog>
        line: '<catalogRef xlink:title="CMIP6" xlink:href="catalogs/cmip6.xml" name="" />'

- name: Deploy tomcats
  hosts: servers
  vars_files:
    - secrets/secret.yml
    - secrets/svn.yml
  roles:
    - role: jdk-source
    - role: tomcat-source
    - role: tomcat
      tomcat_name: i1
      tomcat_webapps: [tds, tap]
      tomcat_http_port: 8080
      tomcat_ajp_port: 8008
      tomcat_shutdown_port: 8005
      tomcat_workers:
        - gateway: "{{ load_balancer }}"
          balancer: tap
          properties: loadfactor=1 route={{ tomcat_route }}
        - gateway: "{{ load_balancer }}"
          balancer: default
          properties: loadfactor=1 route={{ tomcat_route }}
    - role: tomcat
      tomcat_name: i2
      tomcat_webapps: [tds]
      tomcat_http_port: 8081
      tomcat_ajp_port: 8009
      tomcat_ssl_port: 8444
      tomcat_shutdown_port: 8006
      tomcat_workers:
        - gateway: "{{ load_balancer }}"
          balancer: system4interim
          properties: loadfactor=1 route={{ tomcat_route }}
        - gateway: "{{ load_balancer }}"
          balancer: default
          properties: loadfactor=1 route={{ tomcat_route }}
  tasks:
    - name: Refresh catalogs
      command: curl -L --insecure -u '{{ tds_admin.user }}:{{ tds_admin.password }}' {{ url }}
      vars:
        url: https://{{ inventory_hostname }}:{{ item }}/{{ tds_context }}/admin/debug?Catalogs/reinit
      with_items: [8443, 8444]
      tags: [never, catalogs]
